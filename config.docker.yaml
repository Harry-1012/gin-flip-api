# github.com/haoleiqin/gin-flip-api Global Configuration

gin-model: "release" # debug release test

# jwt configuration
jwt:
  signing-key: 'qmPlus'
  expires-time: '7d' #token有效时间
  buffer-time: '1d' #缓冲时间
  issuer: 'qmPlus'
  
# zap logger configuration
zap:
  level: 'info'
  format: 'console'
  prefix: '[github.com/haoleiqin/gin-flip-api]'
  director: 'log'
  show-line: true
  encode-level: 'LowercaseColorLevelEncoder'
  stacktrace-key: 'stacktrace'
  log-in-console: true

# redis configuration
redis:
  db: 0
  addr: '127.0.0.1:6379'
  password: ''

# email configuration
email:
  to: 'xxx@qq.com'
  port: 465
  from: 'xxx@qq.com'
  host: 'smtp.qq.com'
  is-ssl: true
  secret: 'xxx'
  nickname: 'xxx'

# casbin configuration
casbin:
  model-path: './resource/rbac_model.conf'

# system configuration
system:
  env: 'public'  # Change to "develop" to skip authentication for development mode
  addr: 9105
  db-type: 'mysql'
  oss-type: 'local'    # aliyun-oss,local 控制oss选择走本地还是 七牛等其他仓 自行增加其他oss仓可以在 server/utils/upload/upload.go 中 NewOss函数配置
  use-redis: true    # 使用redis 生产
  use-multipoint: false
  # IP限制次数 一个小时15000次
  iplimit-count: 15000
  #  IP限制一个小时
  iplimit-time: 3600

# captcha configuration
captcha:
  key-long: 4
  img-width: 240
  img-height: 80

# mysql connect configuration
# 未初始化之前请勿手动修改数据库信息！！！如果一定要手动初始化请看（https://www.github.com/haoleiqin/gin-flip-api.com/docs/first）
mysql:
  path: '127.0.0.1'
  port: '3306'
  config: 'charset=utf8mb4&parseTime=True&loc=Local'
  db-name: 'xxx'
  username: 'xxx'
  password: 'xxx'
  max-idle-conns: 10
  max-open-conns: 100
  log-mode: ""
  log-zap: false

# db-list:
#   # 数据库列表
#   - disabled: false # 是否启用
#     type: "mysql" # 数据库的类型,目前支持mysql、pgsql
#     alias-name: "xxx" # 数据库的名称,注意: alias-name 需要在db-list中唯一
#     path: '127.0.0.1' 生产
#     port: '3306'
#     config: 'charset=utf8mb4&parseTime=True&loc=Local'
#     db-name: 'xxx'
#     username: 'xxx'
#     password: 'xxx'
#     max-idle-conns: 10
#     max-open-conns: 100
#     log-mode: ""
#     log-zap: false

# pgsql connect configuration
# 未初始化之前请勿手动修改数据库信息！！！如果一定要手动初始化请看（https://www.github.com/haoleiqin/gin-flip-api.com/docs/first）
pgsql:
  path: ''
  port: ''
  config: ''
  db-name: ''
  username: ''
  password: ''
  max-idle-conns: 10
  max-open-conns: 100
  log-mode: ""
  log-zap: false

# local configuration
local:
  path: 'uploads/file'

# autocode configuration
autocode:
  transfer-restart: true
  # root 自动适配项目根目录
  # 请不要手动配置,他会在项目加载的时候识别出根路径
  root: ""
  server: /server
  server-plug: /plugin/%s
  server-api: /api/v1/%s
  server-initialize: /initialize
  server-model: /model/%s
  server-request: /model/%s/request/
  server-router: /router/%s
  server-service: /service/%s
  web: /web/src
  web-api: /api
  web-form: /view
  web-table: /view

# aliyun oss configuration
aliyun-oss:
  endpoint: https://oss-cn-xxx.aliyuncs.com
  access-key-id: xxx
  access-key-secret: xxx
  bucket-name: xxx
  bucket-url: https://xxx.oss-cn-xxx.aliyuncs.com
  base-path: oss

# tencent cos configuration
tencent-cos:
  bucket: 'xxxxx-10005608'
  region: 'ap-shanghai'
  secret-id: 'xxxxxxxx'
  secret-key: 'xxxxxxxx'
  base-url: 'https://gin.vue.admin'
  path-prefix: 'github.com/haoleiqin/gin-flip-api'

# excel configuration
excel:
  dir: './resource/excel/'

# timer task db clear table
Timer:
  start: true
  spec: "@daily"  # 定时任务详细配置参考 https://pkg.go.dev/github.com/robfig/cron/v3
  detail:
    - tableName: "sys_operation_records"
      compareField: "created_at"
      interval: "2160h"
    - tableName: "jwt_blacklists"
      compareField: "created_at"
      interval: "168h"

# 跨域配置
# 需要配合 server/initialize/router.go#L32 使用
cors:
  mode: whitelist # 放行模式: allow-all, 放行全部; whitelist, 白名单模式, 来自白名单内域名的请求添加 cors 头; strict-whitelist 严格白名单模式, 白名单外的请求一律拒绝
  whitelist:
    - allow-origin: localhost
      allow-headers: content-type
      allow-methods: GET, POST
      expose-headers: Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Content-Type
      allow-credentials: true # 布尔值
    - allow-origin: 127.0.0.1
      allow-headers: content-type
      allow-methods: GET, POST
      expose-headers: Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Content-Type
